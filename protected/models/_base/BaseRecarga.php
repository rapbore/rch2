<?php

/**
 * This is the model base class for the table "recarga".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Recarga".
 *
 * Columns in table "recarga" available as properties of the model,
 * followed by relations of table "recarga" available as properties of the model.
 *
 * @property integer $id
 * @property integer $user_id
 * @property integer $local_id
 * @property string $celular
 * @property string $compania
 * @property string $monto
 * @property string $comentario
 * @property string $estado
 * @property string $fecha
 *
 * @property Atencion[] $atencions
 * @property Local $local
 * @property User $user
 */
abstract class BaseRecarga extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'recarga';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Recarga|Recargas', $n);
	}

	public static function representingColumn() {
		return 'celular';
	}

	public function rules() {
		return array(
			array('user_id, local_id', 'numerical', 'integerOnly'=>true),
			array('celular, compania, monto, estado', 'length', 'max'=>45),
			array('comentario', 'length', 'max'=>200),
			array('fecha', 'safe'),
			array('user_id, local_id, celular, compania, monto, comentario, estado, fecha', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_id, local_id, celular, compania, monto, comentario, estado, fecha', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'atencion' => array(self::HAS_ONE, 'Atencion', 'recarga_id'),
			'local' => array(self::BELONGS_TO, 'Local', 'local_id'),
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_id' => null,
			'local_id' => null,
			'celular' => Yii::t('app', 'Celular'),
			'compania' => Yii::t('app', 'Compania'),
			'monto' => Yii::t('app', 'Monto'),
			'comentario' => Yii::t('app', 'Comentario'),
			'estado' => Yii::t('app', 'Estado'),
			'fecha' => Yii::t('app', 'Fecha'),
			'atencions' => null,
			'local' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('local_id', $this->local_id);
		$criteria->compare('celular', $this->celular, true);
		$criteria->compare('compania', $this->compania, true);
		$criteria->compare('monto', $this->monto, true);
		$criteria->compare('comentario', $this->comentario, true);
		$criteria->compare('estado', $this->estado, true);
		$criteria->compare('fecha', $this->fecha, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
	
	
	
	public function cargarUser()
	{
		$session=Yii::app()->getSession();
		$id_user=$session['_id'];
		return ($id_user);
		
	}
	
	public function cargarListasEmpleado(){
		
			$id_user=$this->cargarUser();
			
			$criteria=new CDbCriteria(array(
				'condition'=>'user_id =:user_id and estado =:estado',
				'order'=>'id DESC',
				'limit'=>500,
				'params'=> array(':user_id' => $id_user, ':estado'=>'LISTA'),
					));
			$model=Recarga::model()->findAll($criteria);
			$dataProvider=new CActiveDataProvider('Recarga',array('criteria'=>$criteria,));
			$dataProvider->setPagination(false);		
			
			return ($dataProvider);

	}
	
	
	public function cargarPendientesEmpleado(){
		
			$id_user=$this->cargarUser();
			
			$criteria=new CDbCriteria(array(
				'condition'=>'user_id =:user_id and estado =:estado or estado =:estado2',
				'order'=>'id DESC',
				'limit'=>500,
				'params'=> array(':user_id' => $id_user, ':estado'=>'PENDIENTE', ':estado2'=>'PROCESANDO'),
					));
			$model=Recarga::model()->findAll($criteria);
			$dataProvider=new CActiveDataProvider('Recarga',array('criteria'=>$criteria,));
			$dataProvider->setPagination(false);		
			
			return ($dataProvider);

	}
	
	
	public function cargarPendientesOperador(){
		
			$id_user=$this->cargarUser();
			
			$criteria=new CDbCriteria(array(
				'condition'=>'estado =:estado or estado =:estado2',
				'order'=>'id DESC',
				'limit'=>500,
				'params'=> array(':estado'=>'PENDIENTE', ':estado2'=>'PROCESANDO'),
					));
			$model=Recarga::model()->findAll($criteria);
			$dataProvider=new CActiveDataProvider('Recarga',array('criteria'=>$criteria,));
			$dataProvider->setPagination(false);		
			
			return ($dataProvider);

	}
	
	
	//public function comprobarNoPrepago($celular, $compania){	
	public function comprobarNoPrepago($celular){	
	
	//$flag = Noprepago::model()->exists('numero =:numero and compania =:compania',array(':numero'=>$celular, ':compania'=>$compania));
	$flag = Noprepago::model()->exists('numero =:numero',array(':numero'=>$celular));
	return $flag;
		
	}
	
	public function comprobarCupo($celular){	
	
	//$flag = Noprepago::model()->exists('numero =:numero and compania =:compania',array(':numero'=>$celular, ':compania'=>$compania));
	$model_cupo = Cupo::model()->findByAttributes(array('numero'=>$celular));
	//$model_cupo = Cupo::model()->findByAttributes( array('numero'=>$numero), 'numero=:numero', array(':numero'=>$celular));
	return $model_cupo;
	
	}

	
	
}//finfin